SELECT
    t.name AS TableName,
    ps.name AS PartitionSchemeName,
    ds.name AS PartitionFileGroup,
    p.partition_number AS PartitionNumber,
    p.rows AS NumberOfRows,
    c.name AS PartitionColumn
FROM sys.tables t
JOIN sys.indexes i 
    ON t.object_id = i.object_id 
    AND i.index_id IN (0, 1) -- 0=Heap, 1=Clustered Index (the table itself)
JOIN sys.partitions p 
    ON i.object_id = p.object_id 
    AND i.index_id = p.index_id
LEFT JOIN sys.partition_schemes ps 
    ON i.data_space_id = ps.data_space_id
LEFT JOIN sys.destination_data_spaces dds 
    ON ps.data_space_id = dds.partition_scheme_id 
    AND p.partition_number = dds.destination_id
LEFT JOIN sys.data_spaces ds 
    ON dds.data_space_id = ds.data_space_id
LEFT JOIN sys.partition_range_values rv 
    ON ps.data_space_id = rv.partition_scheme_id 
    AND p.partition_number = rv.boundary_id
LEFT JOIN sys.index_columns ic 
    ON ic.object_id = i.object_id 
    AND ic.index_id = i.index_id 
    AND ic.partition_ordinal > 0 -- This identifies the partition column
LEFT JOIN sys.columns c 
    ON t.object_id = c.object_id 
    AND ic.column_id = c.column_id
WHERE t.name = 'YourTableName'  -- Replace with your table name
    AND SCHEMA_NAME(t.schema_id) = 'YourSchemaName'; -- Optional: specify schema



SELECT TOP 10 qt.*,rs.*
FROM sys.query_store_query_text AS qt
JOIN sys.query_store_query AS q
    ON qt.query_text_id = q.query_text_id
JOIN sys.query_store_plan AS p
    ON q.query_id = p.query_id
JOIN sys.query_store_runtime_stats AS rs
    ON p.plan_id = rs.plan_id
ORDER BY rs.avg_duration DESC
go


==Azure SQL DB
SELECT 
    qsrs.plan_id,
    qsrs.execution_type_desc,
    qsrs.first_execution_time,
    qsrs.last_execution_time,
    qsrs.count_executions,
    qsrs.avg_logical_io_reads,
    qsrs.avg_logical_io_writes,
    qsrs.avg_physical_io_reads,
    CAST(qsrs.avg_log_bytes_used / 1024.0 / 1024.0 AS DECIMAL(10,2)) AS avg_log_mb_used
FROM sys.query_store_runtime_stats qsrs
INNER JOIN sys.query_store_plan qsp ON qsrs.plan_id = qsp.plan_id
WHERE qsrs.first_execution_time >= DATEADD(day, -7, GETDATE())
ORDER BY qsrs.avg_log_bytes_used DESC;



SELECT 
    q.query_id,
    qt.query_sql_text,
    rs.first_execution_time,
    rs.last_execution_time,
    rs.count_executions,
    CAST(rs.avg_log_bytes_used / 1024.0 / 1024.0 AS DECIMAL(10,2)) AS avg_log_mb_used,
    CAST(rs.max_log_bytes_used / 1024.0 / 1024.0 AS DECIMAL(10,2)) AS max_log_mb_used,
    CAST((rs.count_executions * rs.avg_log_bytes_used) / 1024.0 / 1024.0 AS DECIMAL(10,2)) AS total_log_mb_used
FROM sys.query_store_runtime_stats rs
INNER JOIN sys.query_store_plan p ON rs.plan_id = p.plan_id
INNER JOIN sys.query_store_query q ON p.query_id = q.query_id
INNER JOIN sys.query_store_query_text qt ON q.query_text_id = qt.query_text_id
INNER JOIN sys.query_store_runtime_stats_interval rsi ON rs.runtime_stats_interval_id = rsi.runtime_stats_interval_id
WHERE rsi.start_time >= '2025-01-01 10:00:00'
    AND rsi.end_time <= '2025-01-01 12:00:00'
    AND rs.avg_log_bytes_used > 0
ORDER BY (rs.count_executions * rs.avg_log_bytes_used) DESC;



SELECT 
    end_time AS sample_time,
    avg_log_write_percent AS 'Log Write %',
    max_log_write_percent AS 'Max Log Write %',
    avg_data_io_percent AS 'Data IO %',
    avg_cpu_percent AS 'CPU %',
    avg_memory_usage_percent AS 'Memory %'
FROM sys.dm_db_resource_stats
ORDER BY end_time DESC;
